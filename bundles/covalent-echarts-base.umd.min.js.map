{
  "version": 3,
  "file": "covalent-echarts-base.umd.min.js",
  "sources": [
    "ng://@covalent/echarts/base/out/base.service.ts",
    "ng://@covalent/echarts/base/out/base.component.ts",
    "ng://@covalent/echarts/base/out/tooltip/tooltip.component.ts",
    "ng://@covalent/echarts/base/out/base.module.ts"
  ],
  "sourcesContent": [
    "import {\n  Injectable,\n  Provider,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\n\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class TdChartOptionsService {\n\n  private _options: any = {};\n  private _optionsSubject: Subject<any> = new BehaviorSubject<any>(this._options);\n\n  setOption(option: string, value: any): void {\n    let options: any = {};\n    options[option] = value;\n    Object.assign(this._options, options);\n    this._optionsSubject.next(options);\n  }\n\n  clearOption(option: string): void {\n    this.setOption(option, undefined);\n  }\n\n  listen(): Observable<any> {\n    return this._optionsSubject.asObservable();\n  }\n\n}\n\nexport function BASE_CHART_PROVIDER_FACTORY(\n  parent: TdChartOptionsService): TdChartOptionsService {\n  return parent || new TdChartOptionsService();\n}\n\nexport const BASE_CHART_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdChartOptionsService,\n  deps: [[new Optional(), new SkipSelf(), TdChartOptionsService]],\n  useFactory: BASE_CHART_PROVIDER_FACTORY,\n};\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnChanges,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n  ContentChild,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport * as echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/legendScroll';\nimport 'echarts/lib/component/markArea';\nimport 'echarts/lib/component/dataZoom';\n\nimport { TdChartOptionsService, BASE_CHART_PROVIDER } from './base.service';\n\n@Component({\n  selector: 'td-base-chart',\n  template: ``,\n  styles: [`:host{display:block}`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [BASE_CHART_PROVIDER],\n})\nexport class TdBaseChartComponent implements AfterViewInit, OnChanges, DoCheck, OnDestroy {\n\n  private _resizeSubscription: Subscription;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _heightSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  private _series: any[];\n  private _legend: any;\n\n  private _instance: any;\n  private _options: any = {};\n\n  get instance(): any {\n    return this._instance;\n  }\n\n  get options(): any {\n    return this._options;\n  }\n\n  @Input('chartTitle') chartTitle: string;\n  @Input('showLegend') showLegend: boolean = true;\n  @Input('data') data: any[];\n  @Input('max') max: number;\n  @Input('chartGroup') chartGroup: string;\n  @Input('yAxisFormatter') yAxisFormatter: (value: any, index?: number) => string;\n  @Input('xAxisFormatter') xAxisFormatter: (value: any, index?: number) => string;\n  @Input('yAxisType') yAxisType: string = 'value';\n  @Input('xAxisType') xAxisType: string = 'time';\n  @Input('dataZoom') dataZoom: boolean = true;\n  @Input('xAxis') xAxis: any[];\n  @Input('yAxis') yAxis: any[];\n  @Input('showXAxis') showXAxis: boolean = true;\n  @Input('showYAxis') showYAxis: boolean = true;\n  @Input('yAxisSplitNumber') yAxisSplitNumber: number;\n\n  @Output('markAreaClick') markAreaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _optionsService: TdChartOptionsService) {\n  }\n\n  ngAfterViewInit(): void {\n    this._instance = echarts.init(this._elementRef.nativeElement);\n    fromEvent(this._instance, 'click').subscribe((params: any) => {\n      if (params.componentType === 'markArea') {\n        this.markAreaClick.next(params);\n      }\n    });\n    if (this.chartGroup) {\n      this._instance.group = this.chartGroup;\n      echarts.connect(this.chartGroup);\n      this._changeDetectorRef.markForCheck();\n    }\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        debounceTime(0),\n        distinctUntilChanged(),\n      ),\n      this._heightSubject.asObservable().pipe(\n        debounceTime(0),\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._instance.resize();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n    this.render();\n    this._optionsService.listen().subscribe((options: any) => {\n      Object.assign(this._options, options);\n      this.render();\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width);\n      this._heightSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height);\n    }\n  }\n\n  ngOnChanges(): void {\n    if (this._instance) {\n      this._instance.clear();\n      this.render();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._resizeSubscription) {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n\n  render(): void {\n    if (this._instance) {\n      let option: any = {};\n      if (this.chartTitle) {\n        option.title = {\n          text: this.chartTitle,\n        };\n      }\n      if (this.data && this.data instanceof Array ) {\n        this._series = this.data.map((d: any) => {\n          return {\n            name: d.name,\n            id: d.id,\n            type: d.type ? d.type : 'line',\n            stack: d.stack,\n            data: d.data,\n            color: d.color,\n            connectNulls: false,\n            barWidth: d.barWidth,\n            barGap: d.barGap,\n            z: d.z,\n            lineStyle: {\n              opacity: d.opacity,\n              width: d.width,\n              shadowBlur: d.shadowBlur,\n              shadowColor: d.shadowColor,\n              shadowOffsetX: d.shadowOffsetX,\n              shadowOffsetY: d.shadowOffsetY,\n            },\n            itemStyle: {\n              opacity: d.opacity,\n            },\n            showSymbol: false,\n            areaStyle: d.area ? {opacity: d.opacity} : undefined,\n            markArea: {\n              data: d.markArea,\n              itemStyle: {\n                borderColor: '#464646',\n                borderWidth: 1,\n                opacity: d.markAreaOpacity ? d.markAreaOpacity : 0.1,\n              },\n            },\n          };\n        });\n      }\n      this._legend = {\n        show: this.showLegend,\n        type: 'scroll',\n        selectedMode: 'multiple',\n        orient: 'horizontal', // 'vertical'\n        right: '5',\n        bottom: '5',\n        data: this.data && this.data instanceof Array ? this.data.map((d: any) => d.name) : [],\n      },\n      this._instance.setOption(Object.assign({}, {\n        grid: {\n          show: true,\n          left: '20',\n          right: '20',\n          bottom: this.showLegend ? '30' : '10',\n          top: '10',\n          containLabel: true,\n          borderColor: '#FCFCFC',\n        },\n        dataZoom: this.dataZoom ? [{\n          type: 'inside',\n          throttle: 50,\n          zoomOnMouseWheel: 'shift',\n        }] : undefined,\n        legend: this._legend,\n        xAxis : [{\n          show: this.showXAxis,\n          // name: 'xAxis',\n          // nameLocation: 'middle',\n          // nameGap: 25,\n          // splitNumber: 5,\n          // minInterval: 3600 * 1000 * 24,\n          position: 'bottom',\n          type : this.xAxisType,\n          boundaryGap : false,\n          axisLabel: {\n            // showMinLabel: false,\n            formatter: this.xAxisFormatter,\n            inside: !this.showXAxis,\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#777777',\n            },\n          },\n          data: this.xAxis,\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: '#ECECEC',\n            },\n          },\n        }],\n        yAxis : [{\n          show: this.showYAxis,\n          // min : 0,\n          max: this.max,\n          type : this.yAxisType,\n          axisLabel: {\n            inside: true,\n            showMinLabel: false,\n            formatter: this.yAxisFormatter,\n          },\n          splitNumber: this.yAxisSplitNumber,\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#777777',\n            },\n          },\n          data: this.yAxis,\n          splitLine: {\n            lineStyle: {\n              color: '#ECECEC',\n            },\n          },\n        }],\n        series: this._series,\n      }, this._options), true);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n}\n",
    "import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { TdChartOptionsService } from '../base.service';\n\nexport class TdTooltipContext {\n  $implicit: any;\n  ticket: string;\n}\n\n@Directive({\n  selector: 'ng-template[tdTooltipFormatter]',\n})\nexport class TdChartTooltipFormatterDirective {\n}\n\n@Component({\n  selector: 'td-chart-tooltip',\n  template: `<ng-template #tooltipContent\n            [ngTemplateOutlet]=\"formatterTemplate\"\n            [ngTemplateOutletContext]=\"_context\">\n</ng-template>`,\n  styles: [``],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartTooltipComponent implements OnChanges, OnInit, OnDestroy {\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input('config') config: any = {};\n\n  @Input('show') show: boolean = true;\n  @Input('trigger') trigger: 'axis' | 'item' | 'none' =  'axis';\n  @Input('axisPointer') axisPointer: any;\n  @Input('showContent') showContent: boolean = true;\n  @Input('alwaysShowContent') alwaysShowContent: boolean = false;\n  @Input('triggerOn') triggerOn: 'mousemove' | 'click' | 'mousemove|click' | 'none' = 'mousemove|click';\n  @Input('showDelay') showDelay: number = 0;\n  @Input('hideDelay') hideDelay: number = 0;\n  @Input('enterable') enterable: boolean = false;\n  @Input('confine') confine: boolean = false;\n  @Input('transitionDuration') transitionDuration: number = 0.5;\n  @Input('position') position: string | string[] | number[];\n  @Input('backgroundColor') backgroundColor: string = 'rgba(50,50,50,0.7)';\n  @Input('borderColor') borderColor: string = '#333';\n  @Input('borderWidth') borderWidth: number = 0;\n  @Input('padding') padding: number = 5;\n  @Input('textStyle') textStyle: any = {\n    color: '#FFF',\n  };\n  @Input('extraCssText') extraCssText: string;\n\n  @ContentChild(TdChartTooltipFormatterDirective, {read: TemplateRef}) formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent') fullTemplate: TemplateRef<any>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _optionsService: TdChartOptionsService) {\n  }\n\n  ngOnInit(): void {\n    this._setOptions();\n  }\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    let config: any = Object.assign({}, this.config ? this.config : {}, {\n      show: this.show,\n      trigger: this.trigger,\n      axisPointer: this.axisPointer,\n      showContent: this.showContent,\n      alwaysShowContent: this.alwaysShowContent,\n      triggerOn: this.triggerOn,\n      showDelay: this.showDelay,\n      hideDelay: this.hideDelay,\n      enterable: this.enterable,\n      confine: this.confine,\n      transitionDuration: this.transitionDuration,\n      position: this.position,\n      formatter: (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n        this._context = {\n          $implicit: params,\n          ticket: ticket,\n        };\n        // timeout set since we need to set the HTML at the end of the angular lifecycle when\n        // the tooltip delay is more than 0\n        setTimeout(() => {\n          callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n        });\n        this._changeDetectorRef.markForCheck();\n        return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n      },\n      backgroundColor: this.backgroundColor,\n      borderColor: this.borderColor,\n      borderWidth: this.borderWidth,\n      padding: this.padding,\n      textStyle: this.textStyle,\n      extraCssText: this.extraCssText,\n    });\n    // set tooltip configuration in parent chart and render new configurations\n    this._optionsService.setOption('tooltip', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('tooltip');\n  }\n\n}\n",
    "import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdBaseChartComponent } from './base.component';\nimport { TdChartTooltipComponent, TdChartTooltipFormatterDirective } from './tooltip/tooltip.component';\n\nexport const BASE_MODULE_COMPONENTS: Type<any>[] = [\n  TdBaseChartComponent,\n  TdChartTooltipComponent,\n  TdChartTooltipFormatterDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    BASE_MODULE_COMPONENTS,\n  ],\n  exports: [\n    BASE_MODULE_COMPONENTS,\n  ],\n})\nexport class CovalentBaseEchartsModule {\n\n}\n"
  ],
  "names": [
    "TdChartOptionsService",
    "this",
    "_options",
    "_optionsSubject",
    "BehaviorSubject",
    "prototype",
    "setOption",
    "option",
    "value",
    "options",
    "Object",
    "assign",
    "next",
    "clearOption",
    "undefined",
    "listen",
    "asObservable",
    "BASE_CHART_PROVIDER_FACTORY",
    "parent",
    "type",
    "Injectable",
    "BASE_CHART_PROVIDER",
    "provide",
    "deps",
    "Optional",
    "SkipSelf",
    "useFactory",
    "TdBaseChartComponent",
    "_changeDetectorRef",
    "_elementRef",
    "_optionsService",
    "_widthSubject",
    "Subject",
    "_heightSubject",
    "_resizing",
    "showLegend",
    "yAxisType",
    "xAxisType",
    "dataZoom",
    "showXAxis",
    "showYAxis",
    "markAreaClick",
    "EventEmitter",
    "defineProperty",
    "get",
    "_instance",
    "ngAfterViewInit",
    "_this",
    "echarts.init",
    "nativeElement",
    "fromEvent",
    "subscribe",
    "params",
    "componentType",
    "chartGroup",
    "group",
    "echarts.connect",
    "markForCheck",
    "_resizeSubscription",
    "merge",
    "window",
    "pipe",
    "debounceTime",
    "distinctUntilChanged",
    "setTimeout",
    "resize",
    "render",
    "ngDoCheck",
    "getBoundingClientRect",
    "width",
    "height",
    "ngOnChanges",
    "clear",
    "ngOnDestroy",
    "unsubscribe",
    "chartTitle",
    "data",
    "Array",
    "_series",
    "map",
    "d",
    "name",
    "id",
    "stack",
    "color",
    "connectNulls",
    "barWidth",
    "barGap",
    "z",
    "lineStyle",
    "opacity",
    "shadowBlur",
    "shadowColor",
    "shadowOffsetX",
    "shadowOffsetY",
    "itemStyle",
    "showSymbol",
    "areaStyle",
    "area",
    "markArea",
    "borderColor",
    "borderWidth",
    "markAreaOpacity",
    "_legend",
    "show",
    "selectedMode",
    "orient",
    "right",
    "bottom",
    "grid",
    "left",
    "top",
    "containLabel",
    "throttle",
    "zoomOnMouseWheel",
    "legend",
    "xAxis",
    "position",
    "boundaryGap",
    "axisLabel",
    "formatter",
    "xAxisFormatter",
    "inside",
    "axisLine",
    "splitLine",
    "yAxis",
    "max",
    "showMinLabel",
    "yAxisFormatter",
    "splitNumber",
    "yAxisSplitNumber",
    "series",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "providers",
    "ChangeDetectorRef",
    "ElementRef",
    "Input",
    "Output",
    "TdTooltipContext",
    "TdChartTooltipFormatterDirective",
    "Directive",
    "TdChartTooltipComponent",
    "_context",
    "config",
    "trigger",
    "showContent",
    "alwaysShowContent",
    "triggerOn",
    "showDelay",
    "hideDelay",
    "enterable",
    "confine",
    "transitionDuration",
    "backgroundColor",
    "padding",
    "textStyle",
    "ngOnInit",
    "_setOptions",
    "_removeOption",
    "axisPointer",
    "ticket",
    "callback",
    "$implicit",
    "innerHTML",
    "extraCssText",
    "formatterTemplate",
    "ContentChild",
    "read",
    "TemplateRef",
    "fullTemplate",
    "ViewChild",
    "BASE_MODULE_COMPONENTS",
    "CovalentBaseEchartsModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}

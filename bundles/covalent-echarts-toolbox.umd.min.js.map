{"version":3,"sources":["../../../../src/platform/echarts/toolbox/toolbox.component.ts","../../../../src/platform/echarts/toolbox/toolbox.module.ts"],"names":["Directive","args","selector","TdChartToolboxComponent","_changeDetectorRef","_elementRef","_optionsService","this","_state","config","show","showTitle","transitionDuration","left","top","right","bottom","width","height","prototype","ngOnChanges","_setOptions","ngOnDestroy","_removeOption","_checkFormatterTemplate","assignDefined","name","trigger","orient","itemSize","itemGap","label","feature","iconStyle","zlevel","z","setOption","clearOption","formatterTemplate","Object","assign","dataView","optionToContent","_optionToContentFormatter","_this","markForCheck","innerHTML","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","TdChartOptionsService","Input","ContentChild","TdChartViewDataFormatterDirective","read","TemplateRef","ViewChild","static","TOOLBOX_MODULE_COMPONENTS","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6nBA0IA,iCAHCA,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wDAqCV,SAAAC,EACUC,EACAC,EACAC,GAFAC,KAAAH,mBAAAA,EACAG,KAAAF,YAAAA,EACAE,KAAAD,gBAAAA,EA9BFC,KAAAC,OAAc,GAEbD,KAAAE,OAAc,GAEdF,KAAAG,MAAgB,EAKhBH,KAAAI,WAAqB,EAMrBJ,KAAAK,mBAA6B,GAC7BL,KAAAM,KAAwB,OACxBN,KAAAO,IAAuB,OACvBP,KAAAQ,MAAyB,OACzBR,KAAAS,OAA0B,OAC1BT,KAAAU,MAAyB,OACzBV,KAAAW,OAA0B,cAYnCf,EAAAgB,UAAAC,YAAA,WACEb,KAAKc,eAGPlB,EAAAgB,UAAAG,YAAA,WACEf,KAAKgB,iBAGCpB,EAAAgB,UAAAE,YAAA,WACNd,KAAKiB,8BAECf,EAAcgB,EAAAA,cAClBlB,KAAKC,OACL,CACEE,KAAMH,KAAKG,KACXgB,KAAMnB,KAAKoB,QACXC,OAAQrB,KAAKqB,OACbC,SAAUtB,KAAKsB,SACfC,QAASvB,KAAKuB,QACdnB,UAAWJ,KAAKI,UAChBoB,MAAOxB,KAAKwB,MACZC,QAASzB,KAAKyB,QACdC,UAAW1B,KAAK0B,UAChBC,OAAQ3B,KAAK2B,OACbC,EAAG5B,KAAK4B,EACRvB,mBAAoBL,KAAKK,mBACzBC,KAAMN,KAAKM,KACXC,IAAKP,KAAKO,IACVC,MAAOR,KAAKQ,MACZC,OAAQT,KAAKS,OACbC,MAAOV,KAAKU,MACZC,OAAQX,KAAKW,QAEfX,KAAKE,OAASF,KAAKE,OAAS,IAG9BF,KAAKD,gBAAgB8B,UAAU,UAAW3B,IAGpCN,EAAAgB,UAAAI,cAAA,WACNhB,KAAKD,gBAAgB+B,YAAY,YAG3BlC,EAAAgB,UAAAK,wBAAA,WACFjB,KAAK+B,oBACP/B,KAAKyB,QAAOO,OAAAC,OAAAD,OAAAC,OAAA,GACPjC,KAAKyB,SAAO,CACfS,SAAQF,OAAAC,OAAAD,OAAAC,OAAA,GACHjC,KAAKyB,QAAQS,UAAQ,CACxBC,gBAAiBnC,KAAKoC,kCAMtBxC,EAAAgB,UAAAwB,0BAAA,WAAA,IAAAC,EAAArC,KACN,OAAA,WAEE,OADAqC,EAAKxC,mBAAmByC,eACHD,EAAKvC,YAAyB,cAAEyC,qCAjG1DC,EAAAA,UAAS9C,KAAA,CAAC,CACTC,SAAU,mBACV8C,SAAA,uFACAC,gBAAiBC,EAAAA,wBAAwBC,oDAxIzCC,EAAAA,yBADAC,EAAAA,kBASAC,EAAAA,yDAqICC,EAAAA,oBAEAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,sBACAA,EAAAA,iBACAA,EAAAA,kCACAA,EAAAA,oBACAA,EAAAA,mBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,iCAEAC,EAAAA,aAAYvD,KAAA,CAACwD,EAAmC,CAAEC,KAAMC,EAAAA,oCAExDC,EAAAA,UAAS3D,KAAA,CAAC,iBAAkB,CAAE4D,QAAQ,WCpK5BC,EAAyC,CAAC3D,EAAyBsD,KAOhF,iCALCM,EAAAA,SAAQ9D,KAAA,CAAC,CACR+D,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACJ,GACfK,QAAS,CAACL","sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  ITdLabel,\n  ITdShadow,\n  ITdItemStyle,\n  TdTextPosition,\n  TdTextAlign,\n} from '@covalent/echarts/base';\n\nexport type TdToolboxOrient = 'horizontal' | 'vertical';\nexport type TdImageType = 'png' | 'jpeg';\n\nexport interface ITdAcceptedBrushTypes {\n  rect?: string;\n  polygon?: string;\n  lineX?: string;\n  lineY?: string;\n  keep?: string;\n  clear?: string;\n}\n\nexport interface ITdAcceptedMagicTypes {\n  line?: string;\n  bar?: string;\n  stack?: string;\n  tiled?: string;\n}\n\nexport interface ITdToolboxIconEmphasis extends ITdItemStyle, ITdShadow {}\n\nexport interface ITdFeatureIconStyle extends ITdItemStyle, ITdShadow {\n  textPosition?: TdTextPosition;\n  textAlign?: TdTextAlign;\n  emphasis?: ITdToolboxIconEmphasis;\n}\n\nexport interface ITdZoomTitles {\n  zoom?: string;\n  back?: string;\n}\n\nexport interface ITdSaveAsImage {\n  type?: TdImageType;\n  name?: string;\n  backgroundColor?: any;\n  excludeComponents?: string[]; // defaults to ['toolbox']\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n  pixelRatio?: number;\n}\n\nexport interface ITdRestore {\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n}\n\nexport interface ITdDataView {\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n  readOnly?: boolean;\n  optionToContent?: Function;\n  contentToOption?: Function;\n  lang?: string[]; // Defaults to Chinese, there are 3 names in data view, which are ['data view', 'turn off' and 'refresh'].\n  textareaColor?: string;\n  textareaBorderColor?: string;\n  textColor?: string;\n  buttonColor?: string;\n  buttonTextColor?: string;\n}\n\nexport interface ITdDataZoom {\n  show?: boolean;\n  title?: ITdZoomTitles;\n  icon?: ITdZoomTitles;\n  iconStyle?: ITdFeatureIconStyle;\n  xAxisIndex?: number | number[] | boolean;\n  yAxisIndex?: number | number[] | boolean;\n}\n\nexport interface ITdMagicType {\n  show?: boolean;\n  type?: string[]; // only expects 'line' | 'bar' | 'stack' | 'tiled';\n  title?: ITdAcceptedMagicTypes;\n  icon?: ITdAcceptedMagicTypes;\n  iconStyle?: ITdFeatureIconStyle;\n  option?: {\n    line?: object;\n    bar?: object;\n    stack?: object;\n    tiled?: object;\n  };\n  seriesIndex?: {\n    line?: any[];\n    bar?: any[];\n    stack?: any[];\n    tiled?: any[];\n  };\n}\n\nexport interface ITdBrush {\n  type?: any[];\n  icon?: ITdAcceptedBrushTypes;\n  title?: ITdAcceptedBrushTypes;\n}\n\nexport interface ITdToolboxFeature {\n  saveAsImage?: ITdSaveAsImage;\n  restore?: ITdRestore;\n  dataView?: ITdDataView;\n  dataZoom?: ITdDataZoom;\n  magicType?: ITdMagicType;\n  brush?: ITdBrush;\n}\n\n@Directive({\n  selector: 'ng-template[tdViewDataFormatter]',\n})\nexport class TdChartViewDataFormatterDirective {}\n\n@Component({\n  selector: 'td-chart-toolbox',\n  templateUrl: './toolbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartToolboxComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  @Input() config: any = {};\n\n  @Input() show: boolean = true;\n  @Input() trigger: string;\n  @Input() orient: TdToolboxOrient;\n  @Input() itemSize: number;\n  @Input() itemGap: number;\n  @Input() showTitle: boolean = true;\n  @Input() label: ITdLabel;\n  @Input() feature: ITdToolboxFeature;\n  @Input() iconStyle: ITdFeatureIconStyle;\n  @Input() zlevel: number;\n  @Input() z: number;\n  @Input() transitionDuration: number = 0.5;\n  @Input() left: string | number = 'auto';\n  @Input() top: string | number = 'auto';\n  @Input() right: string | number = 'auto';\n  @Input() bottom: string | number = 'auto';\n  @Input() width: string | number = 'auto';\n  @Input() height: string | number = 'auto';\n\n  @ContentChild(TdChartViewDataFormatterDirective, { read: TemplateRef })\n  formatterTemplate: TemplateRef<any>;\n  @ViewChild('toolboxContent', { static: true }) fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _optionsService: TdChartOptionsService,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    this._checkFormatterTemplate();\n\n    const config: any = assignDefined(\n      this._state,\n      {\n        show: this.show,\n        name: this.trigger,\n        orient: this.orient,\n        itemSize: this.itemSize,\n        itemGap: this.itemGap,\n        showTitle: this.showTitle,\n        label: this.label,\n        feature: this.feature,\n        iconStyle: this.iconStyle,\n        zlevel: this.zlevel,\n        z: this.z,\n        transitionDuration: this.transitionDuration,\n        left: this.left,\n        top: this.top,\n        right: this.right,\n        bottom: this.bottom,\n        width: this.width,\n        height: this.height,\n      },\n      this.config ? this.config : {},\n    );\n    // set toolbox configuration in parent chart and render new configurations\n    this._optionsService.setOption('toolbox', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('toolbox');\n  }\n\n  private _checkFormatterTemplate(): void {\n    if (this.formatterTemplate) {\n      this.feature = {\n        ...this.feature,\n        dataView: {\n          ...this.feature.dataView,\n          optionToContent: this._optionToContentFormatter(),\n        },\n      };\n    }\n  }\n\n  private _optionToContentFormatter(): () => string {\n    return () => {\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/toolbox';\n\nimport { TdChartToolboxComponent, TdChartViewDataFormatterDirective } from './toolbox.component';\n\nexport const TOOLBOX_MODULE_COMPONENTS: Type<any>[] = [TdChartToolboxComponent, TdChartViewDataFormatterDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TOOLBOX_MODULE_COMPONENTS],\n  exports: [TOOLBOX_MODULE_COMPONENTS],\n})\nexport class CovalentToolboxEchartsModule {}\n"]}
{"version":3,"sources":["../../../../src/platform/echarts/tooltip/tooltip.component.ts","../../../../src/platform/echarts/tooltip/series-tooltip.component.ts","../../../../src/platform/echarts/tooltip/tooltip.module.ts"],"names":["Directive","args","selector","TdChartTooltipComponent","_changeDetectorRef","_elementRef","_optionsService","this","_state","_context","TdTooltipContext","config","show","trigger","showContent","alwaysShowContent","triggerOn","showDelay","hideDelay","enterable","confine","transitionDuration","backgroundColor","borderColor","borderWidth","padding","textStyle","color","prototype","ngOnChanges","_setOptions","ngOnDestroy","_removeOption","assignDefined","axisPointer","position","formatter","formatterTemplate","_formatter","undefined","extraCssText","setOption","clearOption","_this","params","ticket","callback","$implicit","setTimeout","innerHTML","markForCheck","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","TdChartOptionsService","Input","ContentChild","TdChartTooltipFormatterDirective","read","TemplateRef","static","ViewChild","TdSeriesTooltipComponent","_seriesComponent","setStateOption","removeStateOption","TdSeriesDirective","TOOLTIP_MODULE_COMPONENTS","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  TdTooltipTrigger,\n  TdTooltipTriggerOn,\n  TdTooltipPosition,\n} from '@covalent/echarts/base';\n\nexport class TdTooltipContext {\n  $implicit: any;\n  ticket: string;\n}\n\n@Directive({\n  selector: 'ng-template[tdTooltipFormatter]',\n})\nexport class TdChartTooltipFormatterDirective {}\n\n@Component({\n  selector: 'td-chart-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartTooltipComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input() config: any = {};\n\n  @Input() show: boolean = true;\n  @Input() trigger: TdTooltipTrigger = 'axis';\n  @Input() axisPointer: any;\n  @Input() showContent: boolean = true;\n  @Input() alwaysShowContent: boolean = false;\n  @Input() triggerOn: TdTooltipTriggerOn = 'mousemove|click';\n  @Input() showDelay: number = 0;\n  @Input() hideDelay: number = 0;\n  @Input() enterable: boolean = false;\n  @Input() renderMode: 'html' | 'richText';\n  @Input() confine: boolean = false;\n  @Input() transitionDuration: number = 0.5;\n  @Input() position: TdTooltipPosition; // series\n  @Input() formatter: string | Function; // series\n  @Input() backgroundColor: string = 'rgba(50,50,50,0.7)'; // series\n  @Input() borderColor: string = '#333'; // series\n  @Input() borderWidth: number = 0; // series\n  @Input() padding: number = 5; // series\n  @Input() textStyle: any = {\n    // series\n    color: '#FFF',\n  };\n  @Input() extraCssText: string; // series\n\n  @ContentChild(TdChartTooltipFormatterDirective, { read: TemplateRef, static: true })\n  formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent', { static: true }) fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _optionsService: TdChartOptionsService,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    const config: any = assignDefined(\n      this._state,\n      {\n        show: this.show,\n        trigger: this.trigger,\n        axisPointer: this.axisPointer,\n        showContent: this.showContent,\n        alwaysShowContent: this.alwaysShowContent,\n        triggerOn: this.triggerOn,\n        showDelay: this.showDelay,\n        hideDelay: this.hideDelay,\n        enterable: this.enterable,\n        confine: this.confine,\n        transitionDuration: this.transitionDuration,\n        position: this.position,\n        formatter: this.formatter ? this.formatter : this.formatterTemplate ? this._formatter() : undefined,\n        backgroundColor: this.backgroundColor,\n        borderColor: this.borderColor,\n        borderWidth: this.borderWidth,\n        padding: this.padding,\n        textStyle: this.textStyle,\n        extraCssText: this.extraCssText,\n      },\n      this.config ? this.config : {},\n    );\n    // set tooltip configuration in parent chart and render new configurations\n    this._optionsService.setOption('tooltip', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('tooltip');\n  }\n\n  private _formatter(): (params: any, ticket: any, callback: (ticket: string, html: string) => void) => string {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ContentChild,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ElementRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\n\nimport { assignDefined, TdSeriesDirective } from '@covalent/echarts/base';\n\nimport { TdChartTooltipFormatterDirective, TdTooltipContext } from './tooltip.component';\n\n@Component({\n  selector: 'td-chart-series-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdSeriesTooltipComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input() config: any;\n\n  @Input() formatter: any;\n  // Parent tooltip trigger must be set to 'item' to render these properties\n  @Input() position: string | string[] | number[];\n  @Input() backgroundColor: string = 'rgba(50,50,50,0.7)';\n  @Input() borderColor: string = '#333';\n  @Input() borderWidth: number = 0;\n  @Input() padding: number = 5;\n  @Input() textStyle: any = {\n    color: '#FFF',\n  };\n  @Input() extraCssText: string;\n\n  @ContentChild(TdChartTooltipFormatterDirective, { read: TemplateRef, static: true })\n  formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent', { static: true }) fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _seriesComponent: TdSeriesDirective,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    const config: any = assignDefined(\n      this._state,\n      {\n        position: this.position,\n        backgroundColor: this.backgroundColor,\n        borderColor: this.borderColor,\n        borderWidth: this.borderWidth,\n        padding: this.padding,\n        textStyle: this.textStyle,\n        extraCssText: this.extraCssText,\n        formatter: this.formatter ? this.formatter : this.formatterTemplate ? this._formatter() : undefined,\n      },\n      this.config ? this.config : {},\n    );\n    // set series tooltip configuration in parent chart and render new configurations\n    this._seriesComponent.setStateOption('tooltip', config);\n  }\n\n  /**\n   * Formatter for tooltip\n   *\n   */\n  private _formatter(): (params: any, ticket: any, callback: (ticket: string, html: string) => void) => string {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n  private _removeOption(): void {\n    this._seriesComponent.removeStateOption('tooltip');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/tooltip';\n\nimport { TdChartTooltipComponent, TdChartTooltipFormatterDirective } from './tooltip.component';\nimport { TdSeriesTooltipComponent } from './series-tooltip.component';\n\nexport const TOOLTIP_MODULE_COMPONENTS: Type<any>[] = [\n  TdChartTooltipComponent,\n  TdChartTooltipFormatterDirective,\n  TdSeriesTooltipComponent,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TOOLTIP_MODULE_COMPONENTS],\n  exports: [TOOLTIP_MODULE_COMPONENTS],\n})\nexport class CovalentTooltipEchartsModule {}\n"]}
{"version":3,"sources":["ng://@covalent/echarts/tooltip/tooltip.component.ts","ng://@covalent/echarts/tooltip/series-tooltip.component.ts","ng://@covalent/echarts/tooltip/tooltip.module.ts"],"names":["TdTooltipContext","Directive","args","selector","TdChartTooltipFormatterDirective","TdChartTooltipComponent","prototype","ngOnChanges","this","_setOptions","ngOnDestroy","_removeOption","config","assignDefined","_state","show","trigger","axisPointer","showContent","alwaysShowContent","triggerOn","showDelay","hideDelay","enterable","confine","transitionDuration","position","formatter","formatterTemplate","_formatter","undefined","backgroundColor","borderColor","borderWidth","padding","textStyle","extraCssText","_optionsService","setOption","clearOption","_this","params","ticket","callback","_context","$implicit","setTimeout","_elementRef","innerHTML","_changeDetectorRef","markForCheck","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","TdChartOptionsService","Input","ContentChild","read","TemplateRef","ViewChild","color","TdSeriesTooltipComponent","_seriesComponent","setStateOption","removeStateOption","TdSeriesComponent","TOOLTIP_MODULE_COMPONENTS","CovalentTooltipEchartsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  TdTooltipTrigger,\n  TdTooltipTriggerOn,\n  TdTooltipPosition,\n} from '@covalent/echarts/base';\n\nexport class TdTooltipContext {\n  $implicit: any;\n  ticket: string;\n}\n\n@Directive({\n  selector: 'ng-template[tdTooltipFormatter]',\n})\nexport class TdChartTooltipFormatterDirective {\n}\n\n@Component({\n  selector: 'td-chart-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartTooltipComponent implements OnChanges, OnDestroy {\n\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input('config') config: any = {};\n\n  @Input('show') show: boolean = true;\n  @Input('trigger') trigger: TdTooltipTrigger =  'axis';\n  @Input('axisPointer') axisPointer: any;\n  @Input('showContent') showContent: boolean = true;\n  @Input('alwaysShowContent') alwaysShowContent: boolean = false;\n  @Input('triggerOn') triggerOn: TdTooltipTriggerOn = 'mousemove|click';\n  @Input('showDelay') showDelay: number = 0;\n  @Input('hideDelay') hideDelay: number = 0;\n  @Input('enterable') enterable: boolean = false;\n  @Input('renderMode') renderMode: 'html' | 'richText';\n  @Input('confine') confine: boolean = false;\n  @Input('transitionDuration') transitionDuration: number = 0.5;\n  @Input('position') position: TdTooltipPosition; // series\n  @Input('formatter') formatter: string | Function; // series\n  @Input('backgroundColor') backgroundColor: string = 'rgba(50,50,50,0.7)'; // series\n  @Input('borderColor') borderColor: string = '#333'; // series\n  @Input('borderWidth') borderWidth: number = 0; // series\n  @Input('padding') padding: number = 5; // series\n  @Input('textStyle') textStyle: any = { // series\n    color: '#FFF',\n  };\n  @Input('extraCssText') extraCssText: string; // series\n\n  @ContentChild(TdChartTooltipFormatterDirective, {read: TemplateRef}) formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent') fullTemplate: TemplateRef<any>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _optionsService: TdChartOptionsService) {\n  }\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    let config: any = assignDefined(this._state, {\n      show: this.show,\n      trigger: this.trigger,\n      axisPointer: this.axisPointer,\n      showContent: this.showContent,\n      alwaysShowContent: this.alwaysShowContent,\n      triggerOn: this.triggerOn,\n      showDelay: this.showDelay,\n      hideDelay: this.hideDelay,\n      enterable: this.enterable,\n      confine: this.confine,\n      transitionDuration: this.transitionDuration,\n      position: this.position,\n      formatter: this.formatter ? this.formatter : (this.formatterTemplate ? this._formatter() : undefined),\n      backgroundColor: this.backgroundColor,\n      borderColor: this.borderColor,\n      borderWidth: this.borderWidth,\n      padding: this.padding,\n      textStyle: this.textStyle,\n      extraCssText: this.extraCssText,\n    }, this.config ? this.config : {});\n    // set tooltip configuration in parent chart and render new configurations\n    this._optionsService.setOption('tooltip', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('tooltip');\n  }\n\n  private _formatter(): Function {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket: ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n}\n","import { \n  Component,\n  Input,\n  ContentChild,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ElementRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\n\nimport { assignDefined, TdSeriesComponent } from '@covalent/echarts/base';\n\nimport { TdChartTooltipFormatterDirective, TdTooltipContext } from './tooltip.component';\n\n@Component({\n  selector: 'td-chart-series-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdSeriesTooltipComponent implements OnChanges, OnDestroy {\n\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input('config') config: any;\n\n  @Input('formatter') formatter: any;\n  // Parent tooltip trigger must be set to 'item' to render these properties\n  @Input('position') position: string | string[] | number[];\n  @Input('backgroundColor') backgroundColor: string = 'rgba(50,50,50,0.7)';\n  @Input('borderColor') borderColor: string = '#333';\n  @Input('borderWidth') borderWidth: number = 0;\n  @Input('padding') padding: number = 5;\n  @Input('textStyle') textStyle: any = {\n    color: '#FFF',\n  };\n  @Input('extraCssText') extraCssText: string;\n\n  @ContentChild(TdChartTooltipFormatterDirective, {read: TemplateRef}) formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent') fullTemplate: TemplateRef<any>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _seriesComponent: TdSeriesComponent) {\n  }\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    let config: any = assignDefined(this._state, {\n      position: this.position,\n      backgroundColor: this.backgroundColor,\n      borderColor: this.borderColor,\n      borderWidth: this.borderWidth,\n      padding: this.padding,\n      textStyle: this.textStyle,\n      extraCssText: this.extraCssText,\n      formatter: this.formatter ? this.formatter : (this.formatterTemplate ? this._formatter() : undefined),\n    }, this.config ? this.config : {});\n    // set series tooltip configuration in parent chart and render new configurations\n    this._seriesComponent.setStateOption('tooltip', config);\n  }\n  \n  /**\n   * Formatter for tooltip\n   *\n   */\n  private _formatter(): Function {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket: ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n  private _removeOption(): void {\n    this._seriesComponent.removeStateOption('tooltip');\n  }\n\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/tooltip';\n\nimport { TdChartTooltipComponent, TdChartTooltipFormatterDirective } from './tooltip.component';\nimport { TdSeriesTooltipComponent } from './series-tooltip.component';\n\nexport const TOOLTIP_MODULE_COMPONENTS: Type<any>[] = [\n  TdChartTooltipComponent,\n  TdChartTooltipFormatterDirective,\n  TdSeriesTooltipComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TOOLTIP_MODULE_COMPONENTS,\n  ],\n  exports: [\n    TOOLTIP_MODULE_COMPONENTS,\n  ],\n})\nexport class CovalentTooltipEchartsModule { }\n"]}
import { TdChartOptionsService, TdCoordinateSystem, ITdItemStyle, ITdEmphasis, ITdMarkPoint, ITdMarkLine, ITdMarkArea, ITdSeries, ITdLabel, TdSeriesDirective, TdMarkPointSymbol, ITdLineStyle, ITdEdgeLabel } from '@covalent/echarts/base';
export interface ITdCategories {
    name?: string;
    symbol?: TdMarkPointSymbol | string;
    symbolSize?: number | any[];
    symbolRotate?: number;
    symbolKeepAspect?: boolean;
    symbolOffset: any[];
    itemStyle: ITdItemStyle;
    label: ITdLabel;
    emphasis: ITdEmphasis;
}
export interface ITdGraphForce {
    initLayout?: string;
    repulsion?: any | number;
    gravity?: number;
    edgeLength?: any | number;
    layoutAnimation?: boolean;
}
export declare type TdGraphLayout = 'none' | 'circular' | 'force';
export interface ITdGraphSeries extends ITdSeries {
    legendHoverLink?: boolean;
    coordinateSystem?: TdCoordinateSystem;
    xAxisIndex?: number;
    yAxisIndex?: number;
    polarIndex?: number;
    calendarIndex?: number;
    geoIndex?: number;
    hoverAnimation?: boolean;
    circular?: object;
    force?: ITdGraphForce;
    layout?: TdGraphLayout;
    nodeScaleRatio?: boolean;
    draggable?: boolean;
    symbol?: TdMarkPointSymbol | string;
    symbolSize?: number | any[] | Function;
    symbolRotate?: number;
    symbolKeepAspect?: boolean;
    symbolOffset?: any[];
    focusNodeAdjacency: boolean;
    edgeSymbol: any[] | string;
    edgeSymbolSize: number;
    cursor: string;
    roam?: boolean;
    expandAndCollapse?: boolean;
    initialTreeDepth?: number;
    itemStyle?: ITdItemStyle;
    lineStyle?: ITdLineStyle;
    label?: ITdLabel;
    edgeLabel?: ITdEdgeLabel;
    emphasis?: ITdEmphasis;
    categories: ITdCategories;
    data?: any[];
    nodes: any[];
    links: any[];
    edges: any[];
    markPoint?: ITdMarkPoint;
    markLine?: ITdMarkLine;
    markArea?: ITdMarkArea;
    zlevel: number;
    z?: number;
    silent?: boolean;
    left: string | number;
    top: string | number;
    right: string | number;
    bottom: string | number;
    width: string | number;
    height: string | number;
    animation?: boolean;
    animationThreshold?: number;
    animationDuration?: number | Function;
    animationEasing?: string;
    animationDelay?: number | Function;
    animationDurationUpdate?: number | Function;
    animationEasingUpdate?: string;
    animationDelayUpdate?: number | Function;
}
export declare class TdChartSeriesGraphComponent extends TdSeriesDirective implements ITdGraphSeries {
    legendHoverLink: boolean;
    coordinateSystem: TdCoordinateSystem;
    xAxisIndex: number;
    yAxisIndex: number;
    polarIndex: number;
    calendarIndex: number;
    geoIndex: number;
    hoverAnimation: boolean;
    circular: object;
    force: ITdGraphForce;
    layout: TdGraphLayout;
    nodeScaleRatio: boolean;
    draggable: boolean;
    symbol: TdMarkPointSymbol | string;
    symbolSize: number | any[] | Function;
    symbolRotate: number;
    symbolKeepAspect: boolean;
    symbolOffset: any[];
    focusNodeAdjacency: boolean;
    edgeSymbol: any[] | string;
    edgeSymbolSize: number;
    cursor: string;
    roam: boolean;
    initialTreeDepth: number;
    itemStyle: ITdItemStyle;
    lineStyle: ITdLineStyle;
    label: ITdLabel;
    edgeLabel: ITdEdgeLabel;
    emphasis: ITdEmphasis;
    categories: ITdCategories;
    nodes: any[];
    links: any[];
    edges: any[];
    markPoint: ITdMarkPoint;
    markLine: ITdMarkLine;
    markArea: ITdMarkArea;
    zlevel: number;
    z: number;
    silent: boolean;
    left: string | number;
    top: string | number;
    right: string | number;
    bottom: string | number;
    width: string | number;
    height: string | number;
    constructor(_optionsService: TdChartOptionsService);
    getConfig(): any;
}

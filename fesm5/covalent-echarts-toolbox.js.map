{"version":3,"file":"covalent-echarts-toolbox.js.map","sources":["ng://@covalent/echarts/toolbox/toolbox.component.ts","ng://@covalent/echarts/toolbox/toolbox.module.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  ITdLabel,\n  ITdShadow,\n  ITdItemStyle,\n  TdTextPosition,\n  TdTextAlign,\n} from '@covalent/echarts/base';\n\nexport type TdToolboxOrient = 'horizontal' | 'vertical';\nexport type TdImageType = 'png' | 'jpeg';\n\nexport interface ITdAcceptedBrushTypes {\n  rect?: string;\n  polygon?: string;\n  lineX?: string;\n  lineY?: string;\n  keep?: string;\n  clear?: string;\n}\n\nexport interface ITdAcceptedMagicTypes {\n  line?: string;\n  bar?: string;\n  stack?: string;\n  tiled?: string;\n}\n\nexport interface ITdToolboxIconEmphasis extends ITdItemStyle, ITdShadow {}\n\nexport interface ITdFeatureIconStyle extends ITdItemStyle, ITdShadow {\n  textPosition?: TdTextPosition;\n  textAlign?: TdTextAlign;\n  emphasis?: ITdToolboxIconEmphasis;\n}\n\nexport interface ITdZoomTitles {\n  zoom?: string;\n  back?: string;\n}\n\nexport interface ITdSaveAsImage {\n  type?: TdImageType;\n  name?: string;\n  backgroundColor?: any;\n  excludeComponents?: string[]; // defaults to ['toolbox']\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n  pixelRatio?: number;\n}\n\nexport interface ITdRestore {\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n}\n\nexport interface ITdDataView {\n  show?: boolean;\n  title?: string;\n  icon?: string;\n  iconStyle?: ITdFeatureIconStyle;\n  readOnly?: boolean;\n  optionToContent?: Function;\n  contentToOption?: Function;\n  lang?: string[]; // Defaults to Chinese, there are 3 names in data view, which are ['data view', 'turn off' and 'refresh'].\n  textareaColor?: string;\n  textareaBorderColor?: string;\n  textColor?: string;\n  buttonColor?: string;\n  buttonTextColor?: string;\n}\n\nexport interface ITdDataZoom {\n  show?: boolean;\n  title?: ITdZoomTitles;\n  icon?: ITdZoomTitles;\n  iconStyle?: ITdFeatureIconStyle;\n  xAxisIndex?: number | number[] | boolean;\n  yAxisIndex?: number | number[] | boolean;\n}\n\nexport interface ITdMagicType {\n  show?: boolean;\n  type?: string[]; // only expects 'line' | 'bar' | 'stack' | 'tiled';\n  title?: ITdAcceptedMagicTypes;\n  icon?: ITdAcceptedMagicTypes;\n  iconStyle?: ITdFeatureIconStyle;\n  option?: {\n    line?: object;\n    bar?: object;\n    stack?: object;\n    tiled?: object;\n  };\n  seriesIndex?: {\n    line?: any[];\n    bar?: any[];\n    stack?: any[];\n    tiled?: any[];\n  };\n}\n\nexport interface ITdBrush {\n  type?: any[];\n  icon?: ITdAcceptedBrushTypes;\n  title?: ITdAcceptedBrushTypes;\n}\n\nexport interface ITdToolboxFeature {\n  saveAsImage?: ITdSaveAsImage;\n  restore?: ITdRestore;\n  dataView?: ITdDataView;\n  dataZoom?: ITdDataZoom;\n  magicType?: ITdMagicType;\n  brush?: ITdBrush;\n}\n\n@Directive({\n  selector: 'ng-template[tdViewDataFormatter]',\n})\nexport class TdChartViewDataFormatterDirective {}\n\n@Component({\n  selector: 'td-chart-toolbox',\n  templateUrl: './toolbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartToolboxComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  @Input('config') config: any = {};\n\n  @Input('show') show: boolean = true;\n  @Input('name') trigger: string;\n  @Input('orient') orient: TdToolboxOrient;\n  @Input('itemSize') itemSize: number;\n  @Input('itemGap') itemGap: number;\n  @Input('showTitle') showTitle: boolean = true;\n  @Input('label') label: ITdLabel;\n  @Input('feature') feature: ITdToolboxFeature;\n  @Input('iconStyle') iconStyle: ITdFeatureIconStyle;\n  @Input('zlevel') zlevel: number;\n  @Input('z') z: number;\n  @Input('transitionDuration') transitionDuration: number = 0.5;\n  @Input('left') left: string | number = 'auto';\n  @Input('top') top: string | number = 'auto';\n  @Input('right') right: string | number = 'auto';\n  @Input('bottom') bottom: string | number = 'auto';\n  @Input('width') width: string | number = 'auto';\n  @Input('height') height: string | number = 'auto';\n\n  @ContentChild(TdChartViewDataFormatterDirective, { read: TemplateRef })\n  formatterTemplate: TemplateRef<any>;\n  @ViewChild('toolboxContent') fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _optionsService: TdChartOptionsService,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n\n    this._checkFormatterTemplate();\n\n    let config: any = assignDefined(\n      this._state,\n      this.config ? this.config : {},\n      {\n        show: this.show,\n        name: this.trigger,\n        orient: this.orient,\n        itemSize: this.itemSize,\n        itemGap: this.itemGap,\n        showTitle: this.showTitle,\n        label: this.label,\n        feature: this.feature,\n        iconStyle: this.iconStyle,\n        zlevel: this.zlevel,\n        z: this.z,\n        transitionDuration: this.transitionDuration,\n        left: this.left,\n        top: this.top,\n        right: this.right,\n        bottom: this.bottom,\n        width: this.width,\n        height: this.height,\n      },\n    );\n    // set toolbox configuration in parent chart and render new configurations\n    this._optionsService.setOption('toolbox', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('toolbox');\n  }\n\n  private _checkFormatterTemplate(): void {\n    if (this.formatterTemplate) {\n      this.feature = {\n        ...this.feature,\n        dataView: {\n          ...this.feature.dataView,\n          optionToContent: this._optionToContentFormatter(),\n        },\n      };\n    }\n  }\n\n  private _optionToContentFormatter(): Function {\n    return () => {\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/toolbox';\n\nimport { TdChartToolboxComponent, TdChartViewDataFormatterDirective } from './toolbox.component';\n\nexport const TOOLBOX_MODULE_COMPONENTS: Type<any>[] = [\n  TdChartToolboxComponent,\n  TdChartViewDataFormatterDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TOOLBOX_MODULE_COMPONENTS,\n  ],\n  exports: [\n    TOOLBOX_MODULE_COMPONENTS,\n  ],\n})\nexport class CovalentToolboxEchartsModule { }\n"],"names":[],"mappings":"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"}

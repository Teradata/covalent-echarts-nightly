import { TdChartOptionsService, TdCoordinateSystem, TdMarkPointSymbol, ITdLabel, ITdItemStyle, ITdLineStyle, ITdAreaStyle, TdSeriesLayoutBy, ITdMarkPoint, ITdMarkLine, ITdMarkArea, ITdEmphasis, ITdSeries, ITdShadow, TdSeriesDirective } from '@covalent/echarts/base';
export declare type TdSampling = 'average' | 'max' | 'min' | 'sum';
export interface ITdLineSeries extends ITdSeries, ITdShadow {
    coordinateSystem?: TdCoordinateSystem;
    xAxisIndex?: number;
    yAxisIndex?: number;
    polarIndex?: number;
    symbol?: TdMarkPointSymbol | string;
    symbolSize?: number | any[] | Function;
    symbolRotate?: number;
    symbolKeepAspect?: boolean;
    symbolOffset?: any[];
    showSymbol?: boolean;
    showAllSymbol?: boolean | 'auto';
    hoverAnimation?: boolean;
    legendHoverLink?: boolean;
    stack?: string;
    cursor?: string;
    connectNulls?: boolean;
    clipOverflow?: boolean;
    step?: string | boolean;
    label?: ITdLabel;
    itemStyle?: ITdItemStyle;
    lineStyle?: ITdLineStyle;
    width?: number;
    opacity?: number;
    areaStyle?: ITdAreaStyle;
    emphasis?: ITdEmphasis;
    smooth?: boolean | number;
    smoothMonotone?: string;
    sampling?: TdSampling;
    dimensions?: any[];
    encode?: any;
    seriesLayoutBy?: TdSeriesLayoutBy;
    datasetIndex?: number;
    data?: any[];
    markPoint?: ITdMarkPoint;
    markLine?: ITdMarkLine;
    markArea?: ITdMarkArea;
    zlevel?: number;
    z?: number;
    silent?: boolean;
}
export declare class TdChartSeriesLineComponent extends TdSeriesDirective implements ITdLineSeries {
    coordinateSystem: TdCoordinateSystem;
    xAxisIndex: number;
    yAxisIndex: number;
    polarIndex: number;
    symbol: TdMarkPointSymbol | string;
    symbolSize: number | any[] | Function;
    symbolRotate: number;
    symbolKeepAspect: boolean;
    symbolOffset: any[];
    showSymbol: boolean;
    showAllSymbol: boolean;
    hoverAnimation: boolean;
    legendHoverLink: boolean;
    stack: string;
    cursor: string;
    connectNulls: boolean;
    clipOverflow: boolean;
    step: string | boolean;
    label: ITdLabel;
    itemStyle: ITdItemStyle;
    lineStyle: ITdLineStyle;
    areaStyle: ITdAreaStyle;
    emphasis: ITdEmphasis;
    smooth: boolean | number;
    smoothMonotone: string;
    sampling: TdSampling;
    dimensions: any[];
    encode: any;
    seriesLayoutBy: TdSeriesLayoutBy;
    datasetIndex: number;
    markPoint: ITdMarkPoint;
    markLine: ITdMarkLine;
    markArea: ITdMarkArea;
    zlevel: number;
    z: number;
    silent: boolean;
    constructor(_optionsService: TdChartOptionsService);
    getConfig(): any;
}

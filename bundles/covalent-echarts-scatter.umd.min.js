!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@covalent/echarts/base"),require("@angular/common"),require("echarts/lib/chart/scatter")):"function"==typeof define&&define.amd?define("@covalent/echarts/scatter",["exports","@angular/core","@covalent/echarts/base","@angular/common","echarts/lib/chart/scatter"],t):t((e.covalent=e.covalent||{},e.covalent.echarts=e.covalent.echarts||{},e.covalent.echarts.scatter={}),e.ng.core,e.covalent.echarts.base,e.ng.common)}(this,function(e,s,n,t){"use strict";var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(e,t)};var r=function(t){function e(e){return t.call(this,"scatter",e)||this}return function r(e,t){function s(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}(e,t),e.prototype.getConfig=function(){return{coordinateSystem:this.coordinateSystem,xAxisIndex:this.xAxisIndex,yAxisIndex:this.yAxisIndex,polarIndex:this.polarIndex,geoIndex:this.geoIndex,calendarIndex:this.calendarIndex,hoverAnimation:this.hoverAnimation,legendHoverLink:this.legendHoverLink,symbol:this.symbol,symbolSize:this.symbolSize,symbolRotate:this.symbolRotate,symbolKeepAspect:this.symbolKeepAspect,symbolOffset:this.symbolOffset,large:this.large,largeThreshold:this.largeThreshold,cursor:this.cursor,label:this.label,itemStyle:this.itemStyle,emphasis:this.emphasis,progressive:this.progressive,progressiveThreshold:this.progressiveThreshold,dimensions:this.dimensions,encode:this.encode,seriesLayoutBy:this.seriesLayoutBy,datasetIndex:this.datasetIndex,markPoint:this.markPoint,markLine:this.markLine,markArea:this.markArea,zlevel:this.zlevel,z:this.z,silent:this.silent}},e.decorators=[{type:s.Component,args:[{selector:"td-chart-series[td-scatter]",template:"",changeDetection:s.ChangeDetectionStrategy.OnPush,providers:[{provide:n.TdSeriesComponent,useExisting:s.forwardRef(function(){return e})}]}]}],e.ctorParameters=function(){return[{type:n.TdChartOptionsService}]},e.propDecorators={coordinateSystem:[{type:s.Input,args:["coordinateSystem"]}],xAxisIndex:[{type:s.Input,args:["xAxisIndex"]}],yAxisIndex:[{type:s.Input,args:["yAxisIndex"]}],polarIndex:[{type:s.Input,args:["polarIndex"]}],geoIndex:[{type:s.Input,args:["geoIndex"]}],calendarIndex:[{type:s.Input,args:["calendarIndex"]}],hoverAnimation:[{type:s.Input,args:["hoverAnimation"]}],legendHoverLink:[{type:s.Input,args:["legendHoverLink"]}],symbol:[{type:s.Input,args:["symbol"]}],symbolSize:[{type:s.Input,args:["symbolSize"]}],symbolRotate:[{type:s.Input,args:["symbolRotate"]}],symbolKeepAspect:[{type:s.Input,args:["symbolKeepAspect"]}],symbolOffset:[{type:s.Input,args:["symbolOffset"]}],large:[{type:s.Input,args:["large"]}],largeThreshold:[{type:s.Input,args:["largeThreshold"]}],cursor:[{type:s.Input,args:["cursor"]}],label:[{type:s.Input,args:["label"]}],itemStyle:[{type:s.Input,args:["itemStyle"]}],emphasis:[{type:s.Input,args:["emphasis"]}],progressive:[{type:s.Input,args:["progressive"]}],progressiveThreshold:[{type:s.Input,args:["progressiveThreshold"]}],dimensions:[{type:s.Input,args:["dimensions"]}],encode:[{type:s.Input,args:["encode"]}],seriesLayoutBy:[{type:s.Input,args:["seriesLayoutBy"]}],datasetIndex:[{type:s.Input,args:["datasetIndex"]}],markPoint:[{type:s.Input,args:["markPoint"]}],markLine:[{type:s.Input,args:["markLine"]}],markArea:[{type:s.Input,args:["markArea"]}],zlevel:[{type:s.Input,args:["zlevel"]}],z:[{type:s.Input,args:["z"]}],silent:[{type:s.Input,args:["silent"]}]},e}(n.TdSeriesComponent),a=[r],i=function(){function e(){}return e.decorators=[{type:s.NgModule,args:[{imports:[t.CommonModule],declarations:[a],exports:[a]}]}],e}();e.SCATTER_MODULE_COMPONENTS=a,e.CovalentScatterEchartsModule=i,e.TdChartSeriesScatterComponent=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=covalent-echarts-scatter.umd.min.js.map
{
  "version": 3,
  "file": "covalent-echarts-base.umd.min.js",
  "sources": [
    "ng://@covalent/echarts/base/out/chart.component.ts",
    "ng://@covalent/echarts/base/out/chart.module.ts"
  ],
  "sourcesContent": [
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnChanges,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport * as echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/bar';\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/legendScroll';\nimport 'echarts/lib/component/markArea';\nimport 'echarts/lib/component/dataZoom';\n\n@Component({\n  selector: 'td-chart',\n  template: ``,\n  styles: [`:host{display:block}`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartComponent implements AfterViewInit, OnChanges, DoCheck, OnDestroy {\n\n  private _resizeSubscription: Subscription;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _heightSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  private _series: any[];\n  private _legend: any;\n\n  private _instance: any;\n\n  get instance(): any {\n    return this._instance;\n  }\n\n  @Input('chartTitle') chartTitle: string;\n  @Input('showLegend') showLegend: boolean = true;\n  @Input('showTooltip') showTooltip: boolean = true;\n  @Input('data') data: any[];\n  @Input('max') max: number;\n  @Input('chartGroup') chartGroup: string;\n  @Input('yAxisFormatter') yAxisFormatter: (value: any, index?: number) => string;\n  @Input('xAxisFormatter') xAxisFormatter: (value: any, index?: number) => string;\n  @Input('yAxisType') yAxisType: string = 'value';\n  @Input('xAxisType') xAxisType: string = 'time';\n  @Input('dataZoom') dataZoom: boolean = true;\n  @Input('tooltipFormatter') tooltipFormatter: (params: any, ticket?: string, callback?: (ticket: string, html: string) => any) => string;\n  @Input('xAxis') xAxis: any[];\n  @Input('yAxis') yAxis: any[];\n  @Input('showXAxis') showXAxis: boolean = true;\n  @Input('showYAxis') showYAxis: boolean = true;\n  @Input('yAxisSplitNumber') yAxisSplitNumber: number;\n\n  @Output('markAreaClick') markAreaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _ngZone: NgZone) {\n  }\n\n  ngAfterViewInit(): void {\n    this._instance = echarts.init(this._elementRef.nativeElement);\n    fromEvent(this._instance, 'click').subscribe((params: any) => {\n      if (params.componentType === 'markArea') {\n        this.markAreaClick.next(params);\n      }\n    });\n    if (this.chartGroup) {\n      this._instance.group = this.chartGroup;\n      echarts.connect(this.chartGroup);\n      this._changeDetectorRef.markForCheck();\n    }\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n      this._heightSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._instance.resize();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n    this.render();\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width);\n      this._heightSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height);\n    }\n  }\n\n  ngOnChanges(): void {\n    if (this._instance) {\n      this._instance.clear();\n      this.render();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._resizeSubscription) {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n\n  render(): void {\n    let option: any = {};\n    if (this.chartTitle) {\n      option.title = {\n        text: this.chartTitle,\n      };\n    }\n    if (this.data && this.data instanceof Array ) {\n      this._series = this.data.map((d: any) => {\n        return {\n          name: d.name,\n          id: d.id,\n          type: d.type ? d.type : 'line',\n          stack: d.stack,\n          data: d.data,\n          color: d.color,\n          connectNulls: false,\n          barWidth: d.barWidth,\n          barGap: d.barGap,\n          z: d.z,\n          lineStyle: {\n            opacity: d.opacity,\n            width: d.width,\n            shadowBlur: d.shadowBlur,\n            shadowColor: d.shadowColor,\n            shadowOffsetX: d.shadowOffsetX,\n            shadowOffsetY: d.shadowOffsetY,\n          },\n          itemStyle: {\n            opacity: d.opacity,\n          },\n          showSymbol: false,\n          areaStyle: d.area ? {opacity: d.opacity} : undefined,\n          markArea: {\n            data: d.markArea,\n            itemStyle: {\n              borderColor: '#464646',\n              borderWidth: 1,\n              opacity: d.markAreaOpacity ? d.markAreaOpacity : 0.1,\n            },\n          },\n        };\n      });\n    }\n    this._legend = {\n      show: this.showLegend,\n      type: 'scroll',\n      selectedMode: 'multiple',\n      orient: 'horizontal', // 'vertical'\n      right: '5',\n      bottom: '5',\n      data: this.data && this.data instanceof Array ? this.data.map((d: any) => d.name) : [],\n    },\n    this._instance.setOption({\n      grid: {\n        show: true,\n        left: '20',\n        right: '20',\n        bottom: this.showLegend ? '30' : '10',\n        top: '10',\n        containLabel: true,\n        borderColor: '#FCFCFC',\n      },\n      dataZoom: this.dataZoom ? [{\n        type: 'inside',\n        throttle: 50,\n        zoomOnMouseWheel: 'shift',\n      }] : undefined,\n      legend: this._legend,\n      tooltip : {\n        show: this.showTooltip,\n        trigger: 'axis', // 'item'\n        formatter: this.tooltipFormatter,\n        axisPointer: {\n          type: 'line', // line and shadow\n          label: {\n            backgroundColor: '#6A7985',\n          },\n        },\n      },\n      xAxis : [{\n        show: this.showXAxis,\n        // name: 'xAxis',\n        // nameLocation: 'middle',\n        // nameGap: 25,\n        // splitNumber: 5,\n        // minInterval: 3600 * 1000 * 24,\n        position: 'bottom',\n        type : this.xAxisType,\n        boundaryGap : false,\n        axisLabel: {\n          // showMinLabel: false,\n          formatter: this.xAxisFormatter,\n          inside: !this.showXAxis,\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#777777',\n          },\n        },\n        data: this.xAxis,\n        splitLine: {\n          show: false,\n          lineStyle: {\n            color: '#ECECEC',\n          },\n        },\n      }],\n      yAxis : [{\n        show: this.showYAxis,\n        // min : 0,\n        max: this.max,\n        type : this.yAxisType,\n        axisLabel: {\n          inside: true,\n          showMinLabel: false,\n          formatter: this.yAxisFormatter,\n        },\n        splitNumber: this.yAxisSplitNumber,\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#777777',\n          },\n        },\n        data: this.yAxis,\n        splitLine: {\n          lineStyle: {\n            color: '#ECECEC',\n          },\n        },\n      }],\n      series: this._series,\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\n\nimport { TdChartComponent } from './chart.component';\n\n@NgModule({\n  declarations: [\n    TdChartComponent,\n  ],\n  exports: [\n    TdChartComponent,\n  ],\n})\nexport class CovalentBaseEchartsModule {\n\n}\n"
  ],
  "names": [
    "TdChartComponent",
    "_changeDetectorRef",
    "_elementRef",
    "_ngZone",
    "this",
    "_widthSubject",
    "Subject",
    "_heightSubject",
    "_resizing",
    "showLegend",
    "showTooltip",
    "yAxisType",
    "xAxisType",
    "dataZoom",
    "showXAxis",
    "showYAxis",
    "markAreaClick",
    "EventEmitter",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_instance",
    "ngAfterViewInit",
    "_this",
    "echarts.init",
    "nativeElement",
    "fromEvent",
    "subscribe",
    "params",
    "componentType",
    "next",
    "chartGroup",
    "group",
    "echarts.connect",
    "markForCheck",
    "_resizeSubscription",
    "merge",
    "window",
    "pipe",
    "debounceTime",
    "asObservable",
    "distinctUntilChanged",
    "setTimeout",
    "resize",
    "render",
    "ngDoCheck",
    "getBoundingClientRect",
    "width",
    "height",
    "ngOnChanges",
    "clear",
    "ngOnDestroy",
    "unsubscribe",
    "chartTitle",
    "data",
    "Array",
    "_series",
    "map",
    "d",
    "name",
    "id",
    "type",
    "stack",
    "color",
    "connectNulls",
    "barWidth",
    "barGap",
    "z",
    "lineStyle",
    "opacity",
    "shadowBlur",
    "shadowColor",
    "shadowOffsetX",
    "shadowOffsetY",
    "itemStyle",
    "showSymbol",
    "areaStyle",
    "area",
    "undefined",
    "markArea",
    "borderColor",
    "borderWidth",
    "markAreaOpacity",
    "_legend",
    "show",
    "selectedMode",
    "orient",
    "right",
    "bottom",
    "setOption",
    "grid",
    "left",
    "top",
    "containLabel",
    "throttle",
    "zoomOnMouseWheel",
    "legend",
    "tooltip",
    "trigger",
    "formatter",
    "tooltipFormatter",
    "axisPointer",
    "label",
    "backgroundColor",
    "xAxis",
    "position",
    "boundaryGap",
    "axisLabel",
    "xAxisFormatter",
    "inside",
    "axisLine",
    "splitLine",
    "yAxis",
    "max",
    "showMinLabel",
    "yAxisFormatter",
    "splitNumber",
    "yAxisSplitNumber",
    "series",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ChangeDetectorRef",
    "ElementRef",
    "NgZone",
    "Input",
    "Output",
    "CovalentBaseEchartsModule",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}

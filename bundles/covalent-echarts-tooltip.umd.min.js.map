{"version":3,"sources":["ng://@covalent/echarts/tooltip/tooltip.component.ts","ng://@covalent/echarts/tooltip/series-tooltip.component.ts","ng://@covalent/echarts/tooltip/tooltip.module.ts"],"names":["TdTooltipContext","TdChartTooltipFormatterDirective","Directive","args","selector","TdChartTooltipComponent","_changeDetectorRef","_elementRef","_optionsService","this","_state","_context","config","show","trigger","showContent","alwaysShowContent","triggerOn","showDelay","hideDelay","enterable","confine","transitionDuration","backgroundColor","borderColor","borderWidth","padding","textStyle","color","prototype","ngOnInit","_setOptions","ngOnChanges","ngOnDestroy","_removeOption","assignDefined","axisPointer","position","formatter","_formatter","extraCssText","setOption","clearOption","_this","params","ticket","callback","$implicit","setTimeout","innerHTML","markForCheck","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","TdChartOptionsService","Input","ContentChild","read","TemplateRef","ViewChild","TdSeriesTooltipComponent","_seriesComponent","setStateOption","removeStateOption","TdSeriesComponent","TOOLTIP_MODULE_COMPONENTS","CovalentTooltipEchartsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  TdTooltipTrigger,\n  TdTooltipTriggerOn,\n  TdTooltipPosition,\n} from '@covalent/echarts/base';\n\nexport class TdTooltipContext {\n  $implicit: any;\n  ticket: string;\n}\n\n@Directive({\n  selector: 'ng-template[tdTooltipFormatter]',\n})\nexport class TdChartTooltipFormatterDirective {\n}\n\n@Component({\n  selector: 'td-chart-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartTooltipComponent implements OnChanges, OnInit, OnDestroy {\n  \n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input('config') config: any = {};\n\n  @Input('show') show: boolean = true;\n  @Input('trigger') trigger: TdTooltipTrigger =  'axis';\n  @Input('axisPointer') axisPointer: any;\n  @Input('showContent') showContent: boolean = true;\n  @Input('alwaysShowContent') alwaysShowContent: boolean = false;\n  @Input('triggerOn') triggerOn: TdTooltipTriggerOn = 'mousemove|click';\n  @Input('showDelay') showDelay: number = 0;\n  @Input('hideDelay') hideDelay: number = 0;\n  @Input('enterable') enterable: boolean = false;\n  @Input('renderMode') renderMode: 'html' | 'richText';\n  @Input('confine') confine: boolean = false;\n  @Input('transitionDuration') transitionDuration: number = 0.5;\n  @Input('position') position: TdTooltipPosition; // series\n  @Input('formatter') formatter: string | Function; // series\n  @Input('backgroundColor') backgroundColor: string = 'rgba(50,50,50,0.7)'; // series\n  @Input('borderColor') borderColor: string = '#333'; // series\n  @Input('borderWidth') borderWidth: number = 0; // series\n  @Input('padding') padding: number = 5; // series\n  @Input('textStyle') textStyle: any = { // series\n    color: '#FFF',\n  };\n  @Input('extraCssText') extraCssText: string; // series\n\n  @ContentChild(TdChartTooltipFormatterDirective, {read: TemplateRef}) formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent') fullTemplate: TemplateRef<any>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _optionsService: TdChartOptionsService) {\n  }\n\n  ngOnInit(): void {\n    this._setOptions();\n  }\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    let config: any = assignDefined(this._state, this.config ? this.config : {}, {\n      show: this.show,\n      trigger: this.trigger,\n      axisPointer: this.axisPointer,\n      showContent: this.showContent,\n      alwaysShowContent: this.alwaysShowContent,\n      triggerOn: this.triggerOn,\n      showDelay: this.showDelay,\n      hideDelay: this.hideDelay,\n      enterable: this.enterable,\n      confine: this.confine,\n      transitionDuration: this.transitionDuration,\n      position: this.position,\n      formatter: this.formatter ? this.formatter : this._formatter(),\n      backgroundColor: this.backgroundColor,\n      borderColor: this.borderColor,\n      borderWidth: this.borderWidth,\n      padding: this.padding,\n      textStyle: this.textStyle,\n      extraCssText: this.extraCssText,\n    });\n    // set tooltip configuration in parent chart and render new configurations\n    this._optionsService.setOption('tooltip', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('tooltip');\n  }\n\n  private _formatter(): Function {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket: ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n}\n","import { \n  Component,\n  OnInit,\n  Input,\n  ContentChild,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ElementRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\n\nimport { assignDefined, TdSeriesComponent } from '@covalent/echarts/base';\n\nimport { TdChartTooltipFormatterDirective, TdTooltipContext } from './tooltip.component';\n\n@Component({\n  selector: 'td-chart-series-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdSeriesTooltipComponent implements OnChanges, OnInit, OnDestroy {\n\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input('config') config: any;\n\n  @Input('formatter') formatter: any;\n  // Parent tooltip trigger must be set to 'item' to render these properties\n  @Input('position') position: string | string[] | number[];\n  @Input('backgroundColor') backgroundColor: string = 'rgba(50,50,50,0.7)';\n  @Input('borderColor') borderColor: string = '#333';\n  @Input('borderWidth') borderWidth: number = 0;\n  @Input('padding') padding: number = 5;\n  @Input('textStyle') textStyle: any = {\n    color: '#FFF',\n  };\n  @Input('extraCssText') extraCssText: string;\n\n  @ContentChild(TdChartTooltipFormatterDirective, {read: TemplateRef}) formatterTemplate: TemplateRef<any>;\n  @ViewChild('tooltipContent') fullTemplate: TemplateRef<any>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef,\n              private _seriesComponent: TdSeriesComponent) {\n  }\n\n  ngOnInit(): void {\n    this._setOptions();\n  }\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    let config: any = assignDefined(this._state, this.config ? this.config : {}, {\n      position: this.position,\n      backgroundColor: this.backgroundColor,\n      borderColor: this.borderColor,\n      borderWidth: this.borderWidth,\n      padding: this.padding,\n      textStyle: this.textStyle,\n      extraCssText: this.extraCssText,\n      formatter: this.formatter ? this.formatter : this._formatter(),\n    });\n    // set series tooltip configuration in parent chart and render new configurations\n    this._seriesComponent.setStateOption('tooltip', config);\n  }\n  \n  /**\n   * Formatter for tooltip\n   *\n   */\n  private _formatter(): Function {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket: ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n  private _removeOption(): void {\n    this._seriesComponent.removeStateOption('tooltip');\n  }\n\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/tooltip';\n\nimport { TdChartTooltipComponent, TdChartTooltipFormatterDirective } from './tooltip.component';\nimport { TdSeriesTooltipComponent } from './series-tooltip.component';\n\nexport const TOOLTIP_MODULE_COMPONENTS: Type<any>[] = [\n  TdChartTooltipComponent,\n  TdChartTooltipFormatterDirective,\n  TdSeriesTooltipComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TOOLTIP_MODULE_COMPONENTS,\n  ],\n  exports: [\n    TOOLTIP_MODULE_COMPONENTS,\n  ],\n})\nexport class CovalentTooltipEchartsModule { }\n"]}
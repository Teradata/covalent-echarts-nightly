{"version":3,"sources":["ng://@covalent/echarts/tooltip/tooltip.component.ts","ng://@covalent/echarts/tooltip/series-tooltip.component.ts","ng://@covalent/echarts/tooltip/tooltip.module.ts"],"names":["TdTooltipContext","TdChartTooltipFormatterDirective","Directive","args","selector","TdChartTooltipComponent","_changeDetectorRef","_elementRef","_optionsService","this","_state","_context","config","show","trigger","showContent","alwaysShowContent","triggerOn","showDelay","hideDelay","enterable","confine","transitionDuration","backgroundColor","borderColor","borderWidth","padding","textStyle","color","prototype","ngOnChanges","_setOptions","ngOnDestroy","_removeOption","assignDefined","axisPointer","position","formatter","formatterTemplate","_formatter","undefined","extraCssText","setOption","clearOption","_this","params","ticket","callback","$implicit","setTimeout","innerHTML","markForCheck","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","TdChartOptionsService","Input","ContentChild","read","TemplateRef","static","ViewChild","TdSeriesTooltipComponent","_seriesComponent","setStateOption","removeStateOption","TdSeriesComponent","TOOLTIP_MODULE_COMPONENTS","CovalentTooltipEchartsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Directive,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n  OnChanges,\n  ContentChild,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport {\n  TdChartOptionsService,\n  assignDefined,\n  TdTooltipTrigger,\n  TdTooltipTriggerOn,\n  TdTooltipPosition,\n} from '@covalent/echarts/base';\n\nexport class TdTooltipContext {\n  $implicit: any;\n  ticket: string;\n}\n\n@Directive({\n  selector: 'ng-template[tdTooltipFormatter]',\n})\nexport class TdChartTooltipFormatterDirective {}\n\n@Component({\n  selector: 'td-chart-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChartTooltipComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input() config: any = {};\n\n  @Input() show: boolean = true;\n  @Input() trigger: TdTooltipTrigger = 'axis';\n  @Input() axisPointer: any;\n  @Input() showContent: boolean = true;\n  @Input() alwaysShowContent: boolean = false;\n  @Input() triggerOn: TdTooltipTriggerOn = 'mousemove|click';\n  @Input() showDelay: number = 0;\n  @Input() hideDelay: number = 0;\n  @Input() enterable: boolean = false;\n  @Input() renderMode: 'html' | 'richText';\n  @Input() confine: boolean = false;\n  @Input() transitionDuration: number = 0.5;\n  @Input() position: TdTooltipPosition; // series\n  @Input() formatter: string | Function; // series\n  @Input() backgroundColor: string = 'rgba(50,50,50,0.7)'; // series\n  @Input() borderColor: string = '#333'; // series\n  @Input() borderWidth: number = 0; // series\n  @Input() padding: number = 5; // series\n  @Input() textStyle: any = {\n    // series\n    color: '#FFF',\n  };\n  @Input() extraCssText: string; // series\n\n  @ContentChild(TdChartTooltipFormatterDirective, { read: TemplateRef, static: false }) formatterTemplate: TemplateRef<\n    any\n  >;\n  @ViewChild('tooltipContent', { static: true }) fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _optionsService: TdChartOptionsService,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    const config: any = assignDefined(\n      this._state,\n      {\n        show: this.show,\n        trigger: this.trigger,\n        axisPointer: this.axisPointer,\n        showContent: this.showContent,\n        alwaysShowContent: this.alwaysShowContent,\n        triggerOn: this.triggerOn,\n        showDelay: this.showDelay,\n        hideDelay: this.hideDelay,\n        enterable: this.enterable,\n        confine: this.confine,\n        transitionDuration: this.transitionDuration,\n        position: this.position,\n        formatter: this.formatter ? this.formatter : this.formatterTemplate ? this._formatter() : undefined,\n        backgroundColor: this.backgroundColor,\n        borderColor: this.borderColor,\n        borderWidth: this.borderWidth,\n        padding: this.padding,\n        textStyle: this.textStyle,\n        extraCssText: this.extraCssText,\n      },\n      this.config ? this.config : {},\n    );\n    // set tooltip configuration in parent chart and render new configurations\n    this._optionsService.setOption('tooltip', config);\n  }\n\n  private _removeOption(): void {\n    this._optionsService.clearOption('tooltip');\n  }\n\n  private _formatter(): (params: any, ticket: any, callback: (ticket: string, html: string) => void) => string {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ContentChild,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ElementRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\n\nimport { assignDefined, TdSeriesComponent } from '@covalent/echarts/base';\n\nimport { TdChartTooltipFormatterDirective, TdTooltipContext } from './tooltip.component';\n\n@Component({\n  selector: 'td-chart-series-tooltip',\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdSeriesTooltipComponent implements OnChanges, OnDestroy {\n  private _state: any = {};\n\n  _context: TdTooltipContext = new TdTooltipContext();\n\n  @Input() config: any;\n\n  @Input() formatter: any;\n  // Parent tooltip trigger must be set to 'item' to render these properties\n  @Input() position: string | string[] | number[];\n  @Input() backgroundColor: string = 'rgba(50,50,50,0.7)';\n  @Input() borderColor: string = '#333';\n  @Input() borderWidth: number = 0;\n  @Input() padding: number = 5;\n  @Input() textStyle: any = {\n    color: '#FFF',\n  };\n  @Input() extraCssText: string;\n\n  @ContentChild(TdChartTooltipFormatterDirective, { read: TemplateRef, static: false }) formatterTemplate: TemplateRef<\n    any\n  >;\n  @ViewChild('tooltipContent', { static: true }) fullTemplate: TemplateRef<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _seriesComponent: TdSeriesComponent,\n  ) {}\n\n  ngOnChanges(): void {\n    this._setOptions();\n  }\n\n  ngOnDestroy(): void {\n    this._removeOption();\n  }\n\n  private _setOptions(): void {\n    const config: any = assignDefined(\n      this._state,\n      {\n        position: this.position,\n        backgroundColor: this.backgroundColor,\n        borderColor: this.borderColor,\n        borderWidth: this.borderWidth,\n        padding: this.padding,\n        textStyle: this.textStyle,\n        extraCssText: this.extraCssText,\n        formatter: this.formatter ? this.formatter : this.formatterTemplate ? this._formatter() : undefined,\n      },\n      this.config ? this.config : {},\n    );\n    // set series tooltip configuration in parent chart and render new configurations\n    this._seriesComponent.setStateOption('tooltip', config);\n  }\n\n  /**\n   * Formatter for tooltip\n   *\n   */\n  private _formatter(): (params: any, ticket: any, callback: (ticket: string, html: string) => void) => string {\n    return (params: any, ticket: any, callback: (ticket: string, html: string) => void) => {\n      this._context = {\n        $implicit: params,\n        ticket,\n      };\n      // timeout set since we need to set the HTML at the end of the angular lifecycle when\n      // the tooltip delay is more than 0\n      setTimeout(() => {\n        callback(ticket, (<HTMLElement>this._elementRef.nativeElement).innerHTML);\n      });\n      this._changeDetectorRef.markForCheck();\n      return (<HTMLElement>this._elementRef.nativeElement).innerHTML;\n    };\n  }\n\n  private _removeOption(): void {\n    this._seriesComponent.removeStateOption('tooltip');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport 'echarts/lib/component/tooltip';\n\nimport { TdChartTooltipComponent, TdChartTooltipFormatterDirective } from './tooltip.component';\nimport { TdSeriesTooltipComponent } from './series-tooltip.component';\n\nexport const TOOLTIP_MODULE_COMPONENTS: Type<any>[] = [\n  TdChartTooltipComponent,\n  TdChartTooltipFormatterDirective,\n  TdSeriesTooltipComponent,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TOOLTIP_MODULE_COMPONENTS],\n  exports: [TOOLTIP_MODULE_COMPONENTS],\n})\nexport class CovalentTooltipEchartsModule {}\n"]}